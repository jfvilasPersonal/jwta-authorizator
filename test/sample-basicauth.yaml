# apiVersion: v1
# kind: Secret
# metadata:
#   name: users
#   namespace: dev
# data:
#   db: 'e30='
# ---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: obk-authorizator-role
  namespace: dev
rules:
  # "" indicates the core API group
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get","add","update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: obk-authorizator-rolebinding
  namespace: dev
subjects:
- kind: ServiceAccount
  name: default
  namespace : dev
roleRef:
  kind: Role
  name: obk-authorizator-role
---
apiVersion: jfvilas.at.outlook.com/v1
kind: ObkAuthorizator
metadata:
  name: ja-jfvilas
  namespace: dev
spec:
  config:
    replicas: 1
    prometheus: false
    console: true
    logLevel: 9
  ingress:
    name: ingress-jfvilas
    provider: ingress-nginx
    class: nginx
  validators:
    - basicAuth:
        name: testSecret
        realm: testrealm
        storeType: secret
        storeSecret: users
        storeKey: db
        users: 
          - name: u1
            password: p1333
          - name: u2
            password: p2333
    - basicAuth:
        name: testBasicList
        realm: testrealm
        storeType: inline
        users: 
          - name: julio
            password: angel2
          - name: u2
            password: password
  rulesets:
    name: app1
    uriPrefix: ''
    rules:
      # unrestricted
      - uri: "/"
        uritype: "exact"
        type: "unrestricted"
      # valid
      - uri: "/protect/"
        uritype: "prefix"
        type: "valid"
        validators: [ testSecret ]
        onfalse: reject
      - uri: "/check/"
        uritype: "prefix"
        type: "valid"
        validators: [ testBasicList ]
        onfalse: reject
