apiVersion: v1
kind: ConfigMap
metadata:
  name: test-custom
  namespace: dev
data:
  function: >-
    function (context) {
      console.log("Start prpocessing token. Context received: ");
      console.log(JSON.stringify(context,null, 2));
      console.log(`Check authorization: Can token '${context.token}' access uri '${context.uri}'?`);
      var rnd=Math.random();
      if (rnd<0.5) {
        console.log("Authorization denied, trust is: "+rnd);
        return null;
      }
      else {
        console.log("Authorization is ok, trust is "+rnd);
        return 'ACCESS GRANTED TO: '+context.uri;
      }
    }
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: obk-authorizator-role
  namespace: dev
rules:
  # "" indicates the core API group
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: obk-authorizator-rolebinding
  namespace: dev
subjects:
- kind: ServiceAccount
  name: default
  namespace : dev
roleRef:
  kind: Role
  name: obk-authorizator-role
---
apiVersion: jfvilas.at.outlook.com/v1
kind: ObkAuthorizator
metadata:
  name: ja-jfvilas
  namespace: dev
spec:
  config:
    replicas: 1
    prometheus: false
    logLevel: 9
  ingress:
    name: ingress-jfvilas
    # NGINX Ingress
    # provider: nginx-ingress
    ##### class: nginx
    # Ingress Nginx
    # provider: ingress-nginx
    ##### class: nginx
    # Traefik
    provider: ingress-nginx
    class: nginx
  validators:
    - custom:
        name: testcustom
        configMap: test-custom
        key: function
  ruleset:
    # unrestricted
    - uri: "/"
      uritype: "exact"
      type: "unrestricted"
    # valid
    - uri: "/protect/"
      uritype: "prefix"
      type: "valid"
      validators: [ testcustom ]
      onfalse: reject
